AWSTemplateFormatVersion: '2010-09-09'

Resources:
  # 1x VPC
  CyberVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      Tags:
        - Key: Name
          Value: cyber-vpc

  # 2x Subnets
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CyberVPC
      CidrBlock: 10.10.1.0/24
      AvailabilityZone: eu-west-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Subnet-A

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CyberVPC
      CidrBlock: 10.10.2.0/24
      AvailabilityZone: eu-west-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Subnet-B

  # 1x Security Group (Ingress + Egress)
  NodesInternalSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: nodes-internal-ssh
      GroupDescription: Allow SSH traffic between subnets
      VpcId: !Ref CyberVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.10.1.0/24
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.10.2.0/24
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: nodes-ssh-only

  # 2x EC2 Instances
  NodeA:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmazonLinuxAMI
      InstanceType: t3.micro
      KeyName: "cyber-key-pair"
      Tags:
        - Key: Name
          Value: NodeA
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: false
          SubnetId: !Ref SubnetA
          GroupSet:
            - !GetAtt NodesInternalSSH.GroupId

  NodeB:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmazonLinuxAMI
      InstanceType: t3.micro
      KeyName: "cyber-key-pair"
      Tags:
        - Key: Name
          Value: NodeB
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: false
          SubnetId: !Ref SubnetB
          GroupSet:
            - !GetAtt NodesInternalSSH.GroupId

# Parameters
Parameters:
  LatestAmazonLinuxAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

# Outputs
Outputs:
  NodeAPrivateIP:
    Description: Private IP address of NodeA
    Value: !GetAtt NodeA.PrivateIp
  NodeBPrivateIP:
    Description: Private IP address of NodeB
    Value: !GetAtt NodeB.PrivateIp